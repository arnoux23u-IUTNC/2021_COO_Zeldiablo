@startuml

title Diagramme de Classe - Zeldiablo

class Jeu{
    + Jeu()
}

abstract class Personnage{
    - position : Case
    + Personnage()
    + seDeplacer(d : Direction) : boolean
}

class Labyrinthe{
    - joueur : Joueur
    + Labyrinthe(j : Joueur)
    + creerEntree(x : int, y : int) : boolean
    + peutBouger(p : Personnage, d : Direction) : boolean
}

interface Case{
    - x : int
    - y : int
    + Case(x : int, y : int)
}

class Chemin implements Case{
    + Chemin(x : int, y : int)
}

abstract class Obstacle implements Case{
    + Obstacle(x : int, y : int)
}

class Mur extends Obstacle{
    + Mur(x : int, y : int)
}

class Entree implements Case{

    + Entree(x : int, y : int)
}

class Joueur extends Personnage{
    + Joueur()
}

enum Direction{
    NORTH
    SOUTH
    EAST
    WEST
}

Jeu "1" -down-> "1" Labyrinthe: " - labyrinthe"
Labyrinthe "1" -down-> "                1" Entree: " - entree "
Labyrinthe "1" -right-> "*" Case: " - cases "
Labyrinthe "1" -left-> "1" Joueur: " - joueur "

@enduml