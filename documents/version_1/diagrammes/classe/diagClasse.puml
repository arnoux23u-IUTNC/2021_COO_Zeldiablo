@startuml

title Diagramme de Classe - Zeldiablo V1

class Jeu{
    + Jeu()
}

abstract class Personnage{
    + Personnage(l : Labyrinthe, depart : Case)
    + setPosition(position : Case)
    + getCase() : Case
    + seDeplacer(d : Direction) : boolean
}

class Labyrinthe{
    + Labyrinthe()
    + deplacerJoueur(p : Personnage, d : Direction) : boolean
    - peutBouger(p : Personnage, d : Direction) : boolean
    - getDestination(p : Personnage, d : Destination) : Case
}

class Main{
    +main(args : String[])
}

abstract class Case{
    - x : int
    - y : int
    + Case(x : int, y : int)
    + peutTraverser(p : Personnage) : boolean
}

class Chemin extends Case{
    + Chemin(x : int, y : int)
    + peutTraverser(p : Personnage) : boolean
}

abstract class Obstacle extends Case{
    + Obstacle(x : int, y : int)
}

class Mur extends Obstacle{
    + Mur(x : int, y : int)
    + peutTraverser(p : Personnage) : boolean
}

class Porte extends Case{
    - ferme : boolean
    + Porte(x : int, y : int)
    + setFerme(boolean b)
    + peutTraverser(p : Personnage) : boolean
}

class Joueur extends Personnage{
    + Joueur(l : Labyrinthe, e : Porte)
}

enum Direction{
    NORTH
    SOUTH
    EAST
    WEST
}

Jeu "1" --> "1" Labyrinthe: " - labyrinthe"
Labyrinthe "1" --> "1" Porte: " - entree "
Labyrinthe "1" --> "1" Porte: " - sortie "
Labyrinthe "1" --> "*" Case: " - cases "
Personnage "*" --> "1" Case: " - position "
Personnage "*" --> "1" Labyrinthe: " - l "
Labyrinthe "1" -left-> "1" Joueur: " - joueur "

@enduml